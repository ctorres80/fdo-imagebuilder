- name: Automate OStree image builder
  hosts: management
  become: true
  vars_files:
    - ./vars/hosts.yml
  tasks:
    - name: Prepare blueprint templates and compose images
      block:
        - name: Enable Cockpit/Composer/Firewalld/Apache
          ansible.builtin.systemd:
            state: started
            enabled: true
            name: cockpit.socket

        - name: Create blueprint file in /tmp
          template  :
            src: "{{ item.bp_template }}"
            dest: "{{ item.bp_file }}"
          loop: "{{ toml_files }}"

        - name: Create blueprint from shell command
          shell: |
            composer-cli blueprints push "{{ item.bp_file }}"
          loop: "{{ toml_files }}"

        - name: Compose composer-cli start-ostree "{{ edge_commit_bp }}" edge-commit
          shell: |
            composer-cli compose start-ostree "{{ edge_commit_bp }}" edge-commit
          register: _create_instances

        - name: Setting host facts using complex arguments
          ansible.builtin.set_fact:
            composeID: "{{ _create_instances.stdout[8:44] }}"

        - name: Waiting for compose
          shell: |
            results=`composer-cli compose info {{ composeID }} | head -1 | awk -F " " '{print $2}'`
            while [ $results == 'RUNNING' ]
              do
                sleep 30
                results=`composer-cli compose info {{ composeID }} | head -1 | awk -F " " '{print $2}'`
                echo "WAITING"
            done
          register: _create_instances
          async: 3600  # Maximum runtime in seconds. Adjust as needed.
          poll: 0  # Fire and continue (never poll)

        - name: Waiting for compose {{ composeID }} to be completed
          async_status:
            jid: "{{  _create_instances.ansible_job_id }}"
          register: _jobs
          until: _jobs.finished
          delay: 30  # Check every 30 seconds. Adjust as you like.
          retries: 360  # Retry up to 10 times. Adjust as needed.

        - name: Check if blueprint directory exists
          ansible.builtin.stat:
            path: "/tmp/{{ edge_commit_bp }}"
          register: stat_output

        - name: Initialize rpm-ostree repo for blueprint
          when: not stat_output.stat.exists
          block:
            - name: Create blueprint directory
              ansible.builtin.file:
                path: "/tmp/{{ edge_commit_bp }}"
                mode: 0755
                state: directory

        - name: composer-cli compose image
          ansible.builtin.command: 'composer-cli compose image {{ composeID }}'
          args:
            chdir: "/tmp/{{ edge_commit_bp }}"
            
        - name: Create config files for /tmp/nginx.conf /tmp/Dockerfile
          template  :
            src: "{{ item.conf_template }}"
            dest: "{{ item.conf_file }}"
          loop: "{{ docker_files }}"

        - name: Build a container image
          ansible.builtin.command: 'podman build -t {{ edge_commit_bp }}:{{ composeID }} --build-arg commit={{ edge_commit_bp }}/{{ composeID }}-commit.tar .'
          args:
            chdir: "/tmp/"
          register: _create_instances
          async: 3600  # Maximum runtime in seconds. Adjust as needed.
          poll: 0  # Fire and continue (never poll)

        - name: Waiting for podman build
          async_status:
            jid: "{{  _create_instances.ansible_job_id }}"
          register: _jobs
          until: _jobs.finished
          delay: 10  # Check every 10 seconds. Adjust as you like.
          retries: 360  # Retry up to 10 times. Adjust as needed.

        - name: Tag container image
          ansible.builtin.command: 'podman tag {{ edge_commit_bp }}:{{ composeID }} {{ edge_commit_bp }}:latest'

        - name: Run the container
          ansible.builtin.command: 'podman run --name {{ edge_commit_bp }}-latest -d -p  {{ repo_http_extport }}:{{ repo_http_port }} {{ edge_commit_bp }}:{{ composeID }}'

        - name: Compose composer-cli start-ostree "{{ edge_commit_bp }}" edge-commit
          shell: |
            composer-cli compose start-ostree "{{ edge_commit_bp_fdo }}" edge-simplified-installer --ref rhel/{{ baserelease }}/{{ basearch }}/edge --url http://{{ ansible_facts['default_ipv4']['address'] }}:{{ repo_http_extport }}/repo/
          register: _create_instances

        - name: Setting host facts using complex arguments
          ansible.builtin.set_fact:
            composeID: "{{ _create_instances.stdout[8:44] }}"

        - name: Waiting for compose
          shell: |
            results=`composer-cli compose info {{ composeID }} | head -1 | awk -F " " '{print $2}'`
            while [ $results == 'RUNNING' ]
              do
                sleep 30
                results=`composer-cli compose info {{ composeID }} | head -1 | awk -F " " '{print $2}'`
                echo "WAITING"
            done
          register: _create_instances
          async: 3600  # Maximum runtime in seconds. Adjust as needed.
          poll: 0  # Fire and continue (never poll)

        - name: Waiting for compose {{ composeID }} to be completed
          async_status:
            jid: "{{  _create_instances.ansible_job_id }}"
          register: _jobs
          until: _jobs.finished
          delay: 30  # Check every 30 seconds. Adjust as you like.
          retries: 360  # Retry up to 10 times. Adjust as needed.

        - name: Build a container image
          ansible.builtin.command: 'composer-cli compose image {{ composeID }}'
          args:
            chdir: "/tmp/"
      when: inventory_hostname == "owner"
