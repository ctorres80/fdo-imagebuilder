- name: Open Firewall for pmcd
  hosts: servers
  tasks:
    - firewalld:
        service: pmcd
        permanent: yes
        immediate: yes
        state: enabled

- name: Open Firewall for grafana
  hosts: metrics_monitor
  tasks:
    - firewalld:
        service: grafana
        permanent: yes
        immediate: yes
        state: enabled

- name: Use metrics system role to configure PCP metrics recording
  hosts: servers
  tasks:
    - name: Insert IP_Address in the /etc/fdo/owner-onboarding-server.yml file
      lineinfile:
        path: /etc/pcp/pmcd/pmcd.options
        line: "-i {{ ansible_facts['default_ipv4']['address'] }}"
#        state: absent
    - name: Start pmcd ad service
      service:
        name: "{{ item }}"
        enabled: yes
        state: restarted
      loop:
        - pmcd
        - podman.socket
        - podman.service
        - pmlogger

- name: Use metrics system role to configure Grafana
  hosts: metrics_monitor
  roles:
    - redhat.rhel_system_roles.metrics
  tasks:
    - name: Reset config /etc/cockpit/machines.d/99-webui.json
      shell: |
        echo '{' > /etc/cockpit/machines.d/99-webui.json
        echo '}' >> /etc/cockpit/machines.d/99-webui.json
        for i in {201..230}
          do
          ssh -oStrictHostKeyChecking=no 192.168.1.$i echo 'Hello'
        done
    - name: Configure devices for admin access through cockpit
      blockinfile:
        path: /etc/cockpit/machines.d/99-webui.json
        insertafter: "{"
        marker: ""
        block: |2
            "192.168.1.{{ item }}" : {
            "visible" : true,
            "color" : "#dd{{ item }}c",
            "user" : "admin",
            "address" : "192.168.1.{{ item }}"
            },
        state: present
      with_sequence: start=201 end=229
    - name: Configure devices for admin access through cockpit
      blockinfile:
        path: /etc/cockpit/machines.d/99-webui.json
        insertbefore: "}"
        marker: ""
        block: |2
            "192.168.1.230" : {
            "visible" : true,
            "color" : "#dd230c",
            "user" : "admin",
            "address" : "192.168.1.230"
            }
        state: present
    - name: Remove blank spaces
      shell: |
        sed -i '/^$/d' /etc/cockpit/machines.d/99-webui.json
    - name: Restart services
      service:
        name: "{{ item }}"
        enabled: yes
        state: restarted
      loop:
        - cockpit
        - pmlogger
        - pmproxy
# export ANSIBLE_HOST_KEY_CHECKING=False
# for i in {201..230}; do ssh -oStrictHostKeyChecking=no 192.168.1.$i echo 'Hello'; done
# ansible servers -m command -a 'journalctl -u fdo-client-linuxapp.service' -i inventory.yml
# ansible servers -i inventory.yml -m shell -a 'cat /dev/urandom | gzip -9 > /dev/null ' -f 30